### RASPBERRY PICO-2040 CONFIGURATION FOR ACCESORIES AND CHAMBER  ###




#[adxl345 my_accel]
#cs_pin: my_pico: gpio1
#spi_software_sclk_pin: my_pico: gpio2
#spi_software_mosi_pin: my_pico: gpio3
#spi_software_miso_pin: my_pico: gpio4

##CHAMBERLIGHT
[output_pin chamberlight]
pin: pico: gpio9
pwm: true
value:1
shutdown_value: 0
cycle_time: 0.010


[gcode_macro TOGGLE_CHAMBERLIGHT]
gcode:
  SET_PIN PIN=chamberlight VALUE={(not printer['output_pin chamberlight'].value)|int}


##CAMERALIGHT
[output_pin camera_light]
pin: pico: gpio8
pwm: TRUE
value:1
shutdown_value: 0.0
cycle_time: 0.010

[gcode_macro TOGGLE_CAMERA_LIGHT]
gcode:
  SET_PIN PIN=camera_light VALUE={(not printer['output_pin camera_light'].value)|int}

### Turns off the printer
#[output_pin mainpower]
#pin: pico: gpio10
#value: 0.0
#shutdown_value: 0.0

#[gcode_macro _POWER_OFF_MAINPOWER]
#gcode:
#  SET_PIN PIN=mainpower VALUE=1

#[gcode_macro TOGGLE_PRINTER_MAINPOWER]
#gcode:
#  SET_PIN PIN=mainpower VALUE={(not printer['output_pin mainpower'].value)|int}


## sensor for pico 
[temperature_sensor pico_temp]
sensor_type: temperature_mcu
sensor_mcu: pico
min_temp: 0
max_temp: 100


### HOST mcu fan and sensor
[temperature_fan host]
pin: host: gpio12        # the fan control pin (must be a mosfet or a pwm fan)
control: watermark       # the type of hysteresis we are using
max_delta: 2.0            # fan turns on/off at 3Â° over/under target_temp
sensor_path: /sys/class/thermal/thermal_zone0/temp
sensor_type: temperature_host           # same as a temp_sensor
max_temp: 80             # just the valid temperature ranges
min_temp: -10
target_temp: 32.0 


#[temperature_sensor chamber_temp]
#[gcode_macro QUERY_BME280]
#gcode:
#    {% set sensor = printer["bme280 chamber"] %}
#    {action_respond_info(
#        "Tempreature: %.2f C\n"
#        "Pressure: %.2f hPa\n"
#        "Humidity: %.2f%%\n"
#        "VOC reading: %f" % (
#            sensor.temperature,
#            sensor.pressure,
#            sensor.humidity,
#            sensor.gas))}


######################
### Chamber Heater ###
######################

[heater_generic chamber_heater]
gcode_id: chamber
heater_pin: pico: gpio7
sensor_type: BME280
i2c_mcu: pico
gcode_id: AMB
i2c_software_scl_pin: gpio5
i2c_software_sda_pin: gpio4
#i2c_address: pico: 118(0x76)      ##
#i2c_bus: i2c.1                    ###
#i2c_speed: 100000                 ##
control: watermark
max_power: 1.0
min_temp: 0
max_temp: 80

[verify_heater chamber_heater]
max_error: 85
check_gain_time: 90
hysteresis: 10
heating_gain: 0.5

##########################
### Chamber Heater Fan ###
##########################

[heater_fan chamber_fan]
pin: pico: gpio6
max_power: 1.0
fan_speed: 1.0
Shutdown_speed: 0.0
cycle_time: 0.010
hardware_pwm: False
kick_start_time: 1.0
off_below: 0.25
tachometer_pin: ^pico: gpio15
tachometer_ppr: 2
tachometer_poll_interval: 0.001
heater: chamber_heater
heater_temp: 29
#min_temp: 30
#max_temp: 70
#sensor_pin: pico: gpio26
#pullup_resistor: 4700
#kick_start_time: 0.100
#control: watermark
#fan_speed: 1.0

## CHAMBER FAN          ## REFERENCE ##
#[fan_generic chamber_fan]
#pin: pico: gpio6
#hardware_pwm: false
#max_power: 1
#shutdown_speed: 0
#kick_start_time: 1.0
#off_below: 0.2
#tachometer_pin: ^pico: gpio15
#tachometer_ppr: 2
#tachometer_poll_interval: 0.005
#cycle_time: 0.010


#Macro:
#You can run this and immediately start your print. The print wont actually start until the specified chamber temperatures are reached.

#[gcode_macro CHAMBER_TEMP_WAIT]
#gcode:
#  {% if params.MIN_TEMPERATURE and params.MAX_TEMPERATURE and params.MIN_TEMPERATURE|float > params.MAX_TEMPERATURE|float %}
#    {action_raise_error("Chamber Temp Wait: MIN_TEMPERATURE must be less than or equal to MAX_TEMPERATURE
#                         Use: 
#                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80]
#                         - CHAMBER_TEMP_WAIT MAX_TEMPERATURE=[0..80]
#                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80] MAX_TEMPERATURE=[0..80]")}
#  {% elif params.MIN_TEMPERATURE and params.MIN_TEMPERATURE|float > -1 and params.MIN_TEMPERATURE|float < 81 %}
#    {% if params.MAX_TEMPERATURE and params.MAX_TEMPERATURE|float > -1 and params.MAX_TEMPERATURE|float < 81 %}
#      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM={params.MIN_TEMPERATURE|float} MAXIMUM={params.MAX_TEMPERATURE|float}
#    {% else %}
#      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MINIMUM={params.MIN_TEMPERATURE|float}
#    {% endif %}
#  {% elif params.MAX_TEMPERATURE and params.MAX_TEMPERATURE|float > -1 and params.MAX_TEMPERATURE|float < 81 %}
#      TEMPERATURE_WAIT SENSOR="temperature_sensor enclosure_temp" MAXIMUM={params.MAX_TEMPERATURE|float}
#  {% else %}
#    {action_raise_error("Chamber Temp Wait: invalid usage
#                         Use: 
#                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80]
#                         - CHAMBER_TEMP_WAIT MAX_TEMPERATURE=[0..80]
#                         - CHAMBER_TEMP_WAIT MIN_TEMPERATURE=[0..80] MAX_TEMPERATURE=[0..80]")}
#  {% endif %}
#
